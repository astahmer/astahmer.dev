---
import { type CollectionEntry, getCollection } from 'astro:content'
import Layout from '@/layouts/layout.astro'
import { formatDate } from '@/utils/formatDate'
import { css, cx } from '#/styled-system/css'
import { prose, article } from '#/styled-system/recipes'

export async function getStaticPaths() {
  const articles = await getCollection('articles')

  return articles.map((item) => ({
    params: { slug: item.slug },
    props: { post: item },
  }))
}

type Props = {
  post: CollectionEntry<'articles'>
}

const { post } = Astro.props
const { Content } = await post.render()
---

<Layout
  content
  title={post.data.title}
  description={post.data.description}
  canonical={`${import.meta.env.SITE}${post.slug}/`}
  publishedTime={post.data.publishedAt.toISOString()}
  openGraph={{
    image: {
      url: `${import.meta.env.SITE}/posts/${post.slug}/og.png`,
    },
  } as any}
>
  <article>
    <header role="navigation" class={css({ display: 'flex', gap: '4' })}>
      <a
        class={css({
          textDecoration: 'underline',
          _hover: { color: 'sky.100' },
        })}
        href="/">Home</a
      >
      <a
        class={css({
          textDecoration: 'underline',
          _hover: { color: 'sky.100' },
        })}
        href="/posts">Posts</a
      >
    </header>
    <main class={cx(prose(), article())}>
      <header role="presentation">
        <time datetime={post.data.publishedAt.toISOString()}>
          {formatDate(post.data.publishedAt)}
        </time>
        <h1 id="top" class="group">
          <a aria-hidden="true" tabindex="-1" href="#top"><span class="h-anchor">#</span></a>
          {post.data.title}
        </h1>
        <p class={css({ fontStyle: 'italic' })}>{post.data.description}</p>
      </header>

      <Content />
    </main>
    <script
      src="https://giscus.app/client.js"
      data-repo="astahmer/astahmer.dev"
      data-repo-id="R_kgDOKLH7eQ"
      data-category="Announcements"
      data-category-id="DIC_kwDOKLH7ec4CbdnF"
      data-mapping="pathname"
      data-strict="0"
      data-reactions-enabled="1"
      data-emit-metadata="0"
      data-input-position="bottom"
      data-theme="preferred_color_scheme"
      data-lang="en"
      data-loading="lazy"
      crossorigin="anonymous"
      async></script>
  </article>
  <style is:global>
    .group:hover a {
      opacity: 1;
    }
  </style>
</Layout>
